<application>
  <component name="AppStorage">
    <histories>
      <item value="村" />
      <item value="云村" />
      <item value="K歌" />
      <item value="我的" />
      <item value="播客" />
      <item value="发现" />
      <item value="Component" />
      <item value="Invalid byte order: ffff8950" />
      <item value="ExifInterface got an unsupported image format file(ExifInterface supports JPEG and some RAW image formats only) or a corrupted JPEG file to ExifInterface." />
      <item value="placeholder" />
      <item value="network Security Config" />
      <item value="placeholder Drawble" />
      <item value="just" />
      <item value="Illegal State Exception" />
      <item value="Binary XML file line #2 in" />
      <item value="Possible causes for this unexpected error include: Gradle's dependency cache may be corrupt (this sometimes occurs after a network connection timeout.)" />
      <item value="Unable to load class 'com.google.auto.common.MoreElements'. Possible causes for this unexpected error include: Gradle's dependency cache may be corrupt (this sometimes occurs after a network connection timeout.)" />
      <item value="The state of a Gradle build process (daemon) may be corrupt. Stopping all Gradle daemons may solve this problem." />
      <item value="Reached framework class. Abandoning search." />
      <item value="Only the original thread that created a view hierarchy can touch its views." />
      <item value="s.Network On Main Thread Exception" />
      <item value="Http Error: android.os.NetworkOnMainThreadException" />
      <item value="The zipper returned a null value" />
      <item value="Consumer" />
      <item value="map" />
      <item value="println needs a message" />
      <item value="observe" />
      <item value="subscribe" />
      <item value="observe On" />
      <item value="from Iterable" />
      <item value="课程" />
      <item value="身高" />
      <item value="Subscribe" />
      <item value="subscribe On" />
      <item value="Cannot fit requested classes in a single dex file (# fields: 65628 &gt; 65536)" />
      <item value="Compilation avoidance If a dependent project has changed in an ABI-compatible way (only its private API has changed), then Java compilation tasks will be up-to-date. This means that if project A depends on project B and a class in B is changed in an ABI-compatible way (typically, changing only the body of a method), then Gradle won’t recompile A.  Some of the types of changes that do not affect the public API and are ignored:  Changing a method body  Changing a comment  Adding, removing or changing private methods, fields, or inner classes  Adding, removing or changing a resource  Changing the name of jars or directories in the classpath  Renaming a parameter  Since implementation details matter for annotation processors, they must be declared separately on the annotation processor path. Gradle ignores annotation processors on the compile classpath.  Example 7. Declaring annotation processors" />
      <item value="annotation Processor" />
      <item value="compile Only" />
      <item value="The given artifact contains a string literal with a package reference 'android.support.v4.content' that cannot be safely rewritten. Libraries using reflection such as annotation processors need to be updated manually to add support for androidx." />
      <item value="Provider Index" />
      <item value="Interceptor Index" />
      <item value="has already been loaded, trigger by" />
      <item value="ARouter task pool No.1" />
      <item value="production" />
      <item value="providers" />
      <item value="Maybe its does't exist, or didn't load." />
      <item value="Load route meta" />
      <item value="Show friendly tips for user." />
      <item value="postcard" />
      <item value="Autowired" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1668" />
        <entry key="ENGLISH" value="1669" />
        <entry key="ARABIC" value="1" />
        <entry key="BULGARIAN" value="1" />
        <entry key="DANISH" value="1" />
        <entry key="FRENCH" value="7" />
        <entry key="FINNISH" value="1" />
        <entry key="DUTCH" value="2" />
        <entry key="LATIN" value="3" />
        <entry key="ROMANIAN" value="4" />
        <entry key="MALAGASY" value="1" />
        <entry key="MALAY" value="2" />
        <entry key="NORWEGIAN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="SWEDISH" value="1" />
        <entry key="SLOVAK" value="1" />
        <entry key="GREEK" value="1" />
        <entry key="ITALIAN" value="1" />
        <entry key="INDONESIAN" value="3" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>