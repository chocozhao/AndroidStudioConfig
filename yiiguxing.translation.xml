<application>
  <component name="AppStorage">
    <histories>
      <item value="dimension" />
      <item value="Dimensions" />
      <item value="When downloading SDK components and tools using the SDK Manager, Android Studio now allows you to resume downloads that were interrupted (for example, due to a network issue) instead of restarting the download from the beginning. This enhancement is especially helpful for large downloads, such as the Android Emulator or system images, when internet connectivity is unreliable." />
      <item value="To enable or disable Gradle's offline mode, first select View &gt; Tool Windows &gt; Gradle from the menu bar. Then, near the top of the Gradle window, click Toggle Offline Mode ." />
      <item value="View binding provides compile-time safety when referencing views in your code. You can now replace findViewById() with the auto-generated binding class reference. To start using View binding, include the following in each module's build.gradle file:" />
      <item value="Design editors, such as the Layout Editor and Navigation Editor, now provide a Split view that enables you to see both the Design and Code views of your UI at the same time. To enable split view, click the Split icon in the top-right corner of the editor window." />
      <item value="In the color picker for XML or design tools, Android Studio now populates the color resources in your app for you to quickly choose and replace color resources values." />
      <item value="This version of Android Studio includes updates to several design tools, including the Layout Editor and Resource Manager." />
      <item value="This panel describes some of the new features and behavior changes included in this update." />
      <item value="Switched" />
      <item value="PREVIOUS" />
      <item value="divide" />
      <item value="刷新" />
      <item value="Between" />
      <item value="Constraint Layout" />
      <item value="计划" />
      <item value="Pointcut" />
      <item value="on Warning For Buy Max" />
      <item value="on Warning For Inventory" />
      <item value="The latest stable release of Android Studio is now available for download. Android Studio 3.6.2 is a major new release and includes performance improvements, bug fixes and new features. Quality-driven improvements across code editing and debugging Faster builds from compiler and packaging optimizations (requires Android Gradle plugin 3.6.0 or higher) Support for Jetpack View Binding, a compile-time safe replacement for 'findViewById()' Improved memory leak detection for your Activities and Fragments when using Profilers New support for adding classes without restarting your app in Apply Changes Quickly switch between code and design modes with the new Split view in the Design Editors Better JNI editor experience with Kotlin and native C++ projects All improvements through IntelliJ IDEA 2019.2.4" />
      <item value="To determine what is calling variant.getJavaCompiler(), use -Pandroid.debug.obsoleteApi=true on the command line to display more information." />
      <item value="proceed" />
      <item value="If set to true, chart continues to scroll after touch up. Default: true." />
      <item value="Animates the rendering of the chart on the x-axis with the specified * animation time. If animate(...) is called, no further calling of * invalidate() is necessary to refresh the chart. ANIMATIONS ONLY WORK FOR * API LEVEL 11 (Android 3.0.x) AND HIGHER." />
      <item value="Animates the drawing / rendering of the chart on both x- and y-axis with * the specified animation time. If animate(...) is called, no further * calling of invalidate() is necessary to refresh the chart. ANIMATIONS * ONLY WORK FOR API LEVEL 11 (Android 3.0.x) AND HIGHER." />
      <item value="Animates the rendering of the chart on the y-axis with the specified * animation time. If animate(...) is called, no further calling of * invalidate() is necessary to refresh the chart. ANIMATIONS ONLY WORK FOR * API LEVEL 11 (Android 3.0.x) AND HIGHER." />
      <item value="Deceleration friction coefficient in [0 ; 1] interval, higher values * indicate that speed will decrease slowly, for example if it set to 0, it * will stop immediately. 1 is an invalid value, and will be converted to * 0.999f automatically." />
      <item value="滚动" />
      <item value="轮播" />
      <item value="Scale" />
      <item value="Drag" />
      <item value="editable" />
      <item value="Around" />
      <item value="Aspect" />
      <item value="Sets the used x-axis offset for the labels on this axis." />
      <item value="GC overhead limit exceeded" />
      <item value="protocol" />
      <item value="Corner Type" />
      <item value="Rounded Corners Transformation" />
      <item value="头像" />
      <item value="if enabled, the set label count will be forced, meaning that the exact * specified count of labels will * be drawn and evenly distributed alongside the axis - this might cause labels * to have uneven values" />
      <item value="Negative Array Size Exception" />
      <item value="abstract" />
      <item value="Set the marker to the chart" />
      <item value="For bounds control" />
      <item value="to use for it" />
      <item value="create a custom MarkerView (extend MarkerView) and specify the layout" />
      <item value="range" />
      <item value="The layout &quot;adapter_add_device_foot&quot; in layout has no declaration in the base layout folder; this can lead to crashes when the resource is queried in a configuration that does not match this qualifier less... (Ctrl+F1) Inspection info:If a resource is only defined in folders with qualifiers like -land or -en, and there is no default declaration in the base folder (layout or values etc), then the app will crash if that resource is accessed on a device where the device is in a configuration missing the given qualifier. As a special case, drawables do not have to be specified in the base folder; if there is a match in a density folder (such as drawable-mdpi) that image will be used and scaled. Note however that if you only specify a drawable in a folder like drawable-en-hdpi, the app will crash in non-English locales. There may be scenarios where you have a resource, such as a -fr drawable, which is only referenced from some other resource with the same qualifiers (such as a -fr style), which itself has safe fallbacks. However, this still makes it possible for somebody to accidentally reference the drawable and crash, so it is safer to create a default dummy fallback in the base folder. Alternatively, you can suppress the issue by adding tools:ignore=&quot;MissingDefaultResource&quot; on the element. (This scenario frequently happens with string translations, where you might delete code and the corresponding resources, but forget to delete a translation. There is a dedicated issue id for that scenario, with the id ExtraTranslation.) Issue id: MissingDefaultResource" />
      <item value="提交" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="230" />
        <entry key="ENGLISH" value="231" />
        <entry key="FRENCH" value="2" />
        <entry key="LATIN" value="2" />
        <entry key="ROMANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
  </component>
</application>